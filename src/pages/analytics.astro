---
import Layout from '../layouts/Layout.astro';
import Navigation from '../components/Navigation.astro';
import papers from '../content/papers.json';

// Build counts from papers.json
const yearToCount = {} as Record<string, number>;
const yearToAuthors = {} as Record<string, Set<string>>;
for (const p of papers) {
  const y = String(p.year);
  yearToCount[y] = (yearToCount[y] || 0) + 1;
  if (!yearToAuthors[y]) yearToAuthors[y] = new Set<string>();
  for (const author of (p.authors || [])) {
    yearToAuthors[y].add(author);
  }
}
const years = Object.keys(yearToCount).sort();
const counts = years.map((y) => yearToCount[y]);

// Compute first-time authors per year
const firstTimeCounts: number[] = [];
const seenAuthors = new Set<string>();
for (const y of years) {
  const authorsThisYear = Array.from(yearToAuthors[y] || []);
  let firstTimers = 0;
  for (const a of authorsThisYear) {
    if (!seenAuthors.has(a)) firstTimers++;
  }
  firstTimeCounts.push(firstTimers);
  for (const a of authorsThisYear) seenAuthors.add(a);
}

// Basic analytics
const totalPapers = papers.length;
const allAuthors = papers.flatMap((p) => p.authors || []);
const totalAuthors = new Set(allAuthors).size;
const allEditors = papers.flatMap((p) => p.editors || []);
const totalEditors = new Set(allEditors).size;
const totalEditions = new Set(papers.map((p) => p.edition).filter(Boolean)).size;

// Venue counts (normalized)
const venueCounts = {} as Record<string, number>;
// Minimal inline normalization to avoid forward reference
const normalizeVenue = (name: string) => {
  const n = String(name || 'Unknown').trim();
  if (n === 'Université Leipzig' || n === 'Universität Leipzig' || n === 'University of Leipzig') return 'Leipzig University';
  if (n === 'Paris') return 'Université Paris';
  return n;
};
for (const p of papers) {
  const v = normalizeVenue(p.console_venue as string);
  venueCounts[v] = (venueCounts[v] || 0) + 1;
}
const venueNames = Object.keys(venueCounts);
const venueCountValues = venueNames.map((v) => venueCounts[v]);
// Sorted list for display (does not affect map features)
const venueDisplay = Object.entries(venueCounts).sort((a, b) => b[1] - a[1]);

// ==========================
// NORMALIZATION MAPPINGS
// ==========================

// Console venue normalization
const venueNormalization: Record<string, string> = {
  'Université Leipzig': 'Leipzig University',
  'Universität Leipzig': 'Leipzig University',
  'University of Leipzig': 'Leipzig University',
  'Paris': 'Université Paris',
};

// Affiliation normalization
const affiliationNormalization: Record<string, string> = {
  // Frankfurt
  'Goethe-Universität Frankfurt': 'Goethe University Frankfurt',
  'J.W. Goethe-Universität Frankfurt/Georg-August-Universität Göttingen': 'Goethe University Frankfurt',

  // Göttingen
  'Georg-August-Universität Göttingen': 'University of Göttingen',

  // Leipzig
  'Universität Leipzig': 'Leipzig University',
  'Leipzig University': 'Leipzig University',

  // Potsdam
  'Universität Potsdam': 'University of Potsdam',


  // Rome universities
  'La Sapienza University': 'Sapienza University of Rome',
  'Sapienza Università di Roma': 'Sapienza University of Rome',

  // MIT
  'Massachusetts Institute of Technology': 'MIT',

  // Paris
  'Laboratoire de Linguistique Formelle (CNRS UMR 7110 - Université Paris 7)': 'Université Paris 7',
  'Laboratoire de Linguistique Formelle (LLF), Université Paris 7': 'Université Paris 7',

  // Amsterdam
  'Universiteit van Amsterdam': 'University of Amsterdam',

  // Oxford
  'Language & Brain Laboratory, University of Oxford': 'University of Oxford',

  // Barcelona
  'Universitat Autònoma de Barcelona (Centre de Lingüística Teòrica), Catalonia': 'Universitat Autònoma de Barcelona',
  'Universitat de Barcelona & Universitat Autònoma de Barcelona': 'Universitat Autònoma de Barcelona',

  // Stuttgart
  'University of Stuttgart, Institute of Linguistics, Division of English Linguistics (IfLA)': 'University of Stuttgart',

  // ELTE
  'Eötvös Loránd University (ELTE), Budapest': 'Eötvös Loránd University, Budapest',

  // Meertens
  'Meertens Instituut, Amsterdam': 'Meertens Instituut',

  // Nantes
  'Nantes University': 'University of Nantes',

  // Düsseldorf
  'Heinrich Heine Universität Düsseldorf': 'Heinrich Heine University Düsseldorf',
};

// Count all affiliations (normalized)
const affiliationCounts = {} as Record<string, number>;
for (const p of papers) {
  const affs = Array.isArray(p.affiliation)
    ? (p.affiliation as string[])
    : (p.affiliation ? [String(p.affiliation)] : []);
  for (const rawAff of affs) {
    if (!rawAff) continue;
    const trimmed = String(rawAff).trim();
    const canonical = affiliationNormalization[trimmed] || trimmed;
    affiliationCounts[canonical] = (affiliationCounts[canonical] || 0) + 1;
  }
}

// Sort all affiliations by frequency (no slice yet)
const sortedAffiliations = Object.entries(affiliationCounts)
  .sort((a, b) => b[1] - a[1]);

// ✅ Map data: all affiliations
const affNames = sortedAffiliations.map(([name]) => name);
const affCounts = sortedAffiliations.map(([, count]) => count);

// ✅ Sidebar data: only top 5
const displayAffiliations = sortedAffiliations.slice(0, 5);
const displayAffNames = displayAffiliations.map(([name]) => name);
const displayAffCounts = displayAffiliations.map(([, count]) => count);

// ==========================
// COORDINATES (CANONICAL ONLY)
// ==========================

const knownVenueCoords: Record<string, [number, number]> = {
  'Bielefeld University': [52.0302, 8.5325],
  'Queen Mary University of London': [51.5226, -0.0406],
  'University of Nantes': [47.245, -1.555],
  'Leiden University': [52.1601, 4.497],
  'Humboldt-Universität zu Berlin': [52.5186, 13.3933],
  'Université Paris': [48.8566, 2.3522],
  'Universitat Pompeu Fabra': [41.3855, 2.1944],
  'University of Groningen': [53.2194, 6.5665],
  'Leipzig University': [51.338, 12.378],
  'University of Nova Gorica': [45.956, 13.648],
};

const knownAffiliationCoords: Record<string, [number, number]> = {
  'Goethe University Frankfurt': [50.126, 8.669],
  'University of Göttingen': [51.5413, 9.915],
  'Leipzig University': [51.338, 12.378],
  'University of Potsdam': [52.400, 13.06],
  'MIT': [42.3601, -71.0942],
  'Université Paris 7': [48.829, 2.375],
  'University of Amsterdam': [52.3667, 4.8945],
  'University of Oxford': [51.7548, -1.2544],
  'Universitat Autònoma de Barcelona': [41.500, 2.107],
  'University of Stuttgart': [48.747, 9.103],
  'University of Vienna': [48.213, 16.3607],
  'University of Oslo': [59.939, 10.721],
  'Université de Namur': [50.4669, 4.866],
  'The English and Foreign Languages University, Hyderabad': [17.4139, 78.4983],
  'University of Cologne': [50.9271, 6.928],
  'Eötvös Loránd University, Budapest': [47.487, 19.058],
  'University of Cambridge': [52.205, 0.1218],
  'Sapienza University of Rome': [41.903, 12.513],
  'McGill University': [45.5048, -73.5772],
  'University of Pennsylvania': [39.9522, -75.1932],
  'University of Toronto': [43.6629, -79.3957],
  'Rutgers University, New Brunswick': [40.5007, -74.4474],
  'University of Essex': [51.8786, 0.947],
  'The University of Edinburgh': [55.944, -3.189],
  'University of Geneva': [46.1996, 6.1432],
  'University of Graz': [47.077, 15.450],
  'University of Udine': [46.063, 13.234],
  'University of Utah': [40.7649, -111.8421],
  'University of Wisconsin-Milwaukee': [43.078, -87.881],
  'Università degli Studi di Firenze': [43.776, 11.256],
  'Roma Tre University': [41.857, 12.467],
  'Universitat de Girona': [41.963, 2.828],
  'Bar-Ilan University, Israel': [32.067, 34.843],
  'Ben-Gurion University of the Negev': [31.262, 34.801],
  'Tel-Aviv University': [32.113, 34.804],
  'The Hebrew University of Jerusalem': [31.777, 35.234],
  'Sophia University': [35.694, 139.730],
  'Lomonosov Moscow State University': [55.703, 37.530],
  'Vinogradov Russian Language Institute, Russian Academy of Sciences': [55.765, 37.606],
  'ZAS Berlin': [52.512, 13.393],
  'Heinrich Heine University Düsseldorf': [51.187, 6.793],
  'University of British Columbia': [49.2606, -123.246],
  'University of California, Los Angeles': [34.0689, -118.445],
  'University of Michigan': [42.278, -83.738],
  'University of Bucharest': [44.435, 26.101],
  'Julius-Maximilians-Universität Würzburg': [49.783, 9.969],
  'CASTL, University of Tromsø': [69.682, 18.956],
  'Centre for Advanced Study in Theoretical Linguistics (CASTL), University of Tromsø': [69.682, 18.956],
  'UYangon University of Foreign Languages': [16.840, 96.173],
  'National Chi Nan University': [23.951, 120.933],
  'Zhejiang University': [30.264, 120.123],
  'Kyushu University': [33.596, 130.218],
  'Indian Institute of Technology Guwahati': [26.1914, 91.6918],
  'Indian Institute of Technology Delhi': [28.545, 77.1926],
  'Amsterdam Center for Language and Communication': [52.3667, 4.8945],
  'Autonomous University of Barcelona': [41.501, 2.107],
  'Boston University': [42.3505, -71.1054],
  'Boğaziçi University': [41.084, 29.051],
  'Department of Linguistics, New York University': [40.7295, -73.9965],
  'Department of Linguistics, Paris 8 University': [48.953, 2.361],
  'Department of Psychology, University of Michigan': [42.278, -83.738],
  'GIST/Ghent University': [51.04, 3.727],
  
  'Institute of Serbian language of Serbian Academy of Sciences and Arts': [44.8176, 20.4569],
  'Jadavpur University, Kolkata': [22.498, 88.372],
  'Meertens Instituut': [52.362, 4.912],
  'Nantes University': [47.245, -1.555],
  'Queen Mary University of London': [51.5226, -0.0406],
  'Rheinische Friedrich-Wilhelms-Universität Bonn': [50.732, 7.101],
  'Simon Fraser University': [49.278, -122.919],
  'Stony Brook University': [40.915, -73.123],
  'University College London': [51.5246, -0.134],
  'University Paris X Nanterre, Laboratoire MoDyCo': [48.902, 2.214],
  'University of Athens': [37.968, 23.766],
  'University of Massachusetts at Amherst': [42.386, -72.529],
  
  'Université de Provence, Laboratoire Parole et Langage (LPL)': [43.296, 5.369],
  'Utrecht Institute of Linguistics OTS': [52.093, 5.122],
  'Utecht Institute of Linguistics OTS': [52.093, 5.122], // typo alias
};


// Build GeoJSON features for MapLibre
type PointFeature = {
  type: 'Feature';
  properties: { name: string; count: number };
  geometry: { type: 'Point'; coordinates: [number, number] };
};

const venueFeatures = venueNames
  .map((name) => {
    const coords = knownVenueCoords[name];
    if (!coords) return null;
    const [lat, lon] = coords;
    const count = venueCounts[name];
    const feature: PointFeature = {
      type: 'Feature',
      properties: { name, count },
      geometry: { type: 'Point', coordinates: [lon, lat] },
    };
    return feature;
  })
  .filter(Boolean) as PointFeature[];

const affiliationFeatures = affNames
  .map((name, idx) => {
    const coords = knownAffiliationCoords[name];
    if (!coords) return null;
    const [lat, lon] = coords;
    const count = affCounts[idx] || 1;
    const feature: PointFeature = {
      type: 'Feature',
      properties: { name, count },
      geometry: { type: 'Point', coordinates: [lon, lat] },
    };
    return feature;
  })
  .filter(Boolean) as PointFeature[];
---

<Layout title="Analytics - ConSOLE Archive">
  <Navigation currentPage="analytics" />

  <section class="bg-gradient-to-br from-primary-50 to-accent-50 py-16">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center">
        <h1 class="text-3xl lg:text-4xl font-crimson font-semibold text-primary mb-4">ConSOLE Analytics</h1>
        <p class="text-lg text-text-secondary max-w-2xl mx-auto">
          Papers per Year based on data from the archive.
        </p>
      </div>
    </div>
  </section>

  <section class="py-16 bg-white">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <!-- Basic Analytics -->
      <div class="grid md:grid-cols-2 lg:grid-cols-4 gap-6 mb-10">
        <div class="card text-center p-6">
          <div class="text-3xl font-crimson font-bold text-primary mb-2">{totalPapers}</div>
          <div class="text-text-secondary">Total Papers</div>
        </div>
        <div class="card text-center p-6">
          <div class="text-3xl font-crimson font-bold text-primary mb-2">{totalAuthors}</div>
          <div class="text-text-secondary">Unique Authors</div>
        </div>
        <div class="card text-center p-6">
          <div class="text-3xl font-crimson font-bold text-primary mb-2">{totalEditors}</div>
          <div class="text-text-secondary">Editors</div>
        </div>
        <div class="card text-center p-6">
          <div class="text-3xl font-crimson font-bold text-primary mb-2">{totalEditions}</div>
          <div class="text-text-secondary">ConSOLE Editions</div>
        </div>
      </div>
      <div style="height: 20px;"></div>

      <div class="card p-8">
        <h2 class="text-2xl font-crimson font-semibold text-primary mb-6">Papers per Year</h2>
        <div class="relative h-80">
          <canvas id="papersChart"></canvas>
        </div>
      </div>
      <div style="height: 20px;"></div>

      <div class="card p-8 mt-10">
        <h2 class="text-2xl font-crimson font-semibold text-primary mb-6">First-time Authors per Year</h2>
        <div class="relative h-80">
          <canvas id="firstTimeAuthorsChart"></canvas>
        </div>
      </div>
      <div style="height: 20px;"></div>

      <div class="card p-8 mt-10">
        <h2 class="text-2xl font-crimson font-semibold text-primary mb-6">Author & Affiliation Analytics</h2>
        <div class="flex items-center gap-4 mb-3 text-sm">
          <div class="flex items-center gap-2">
            <svg width="14" height="14" viewBox="0 0 14 14" aria-hidden="true">
              <circle cx="7" cy="7" r="6" fill="rgba(59, 130, 246, 0.75)" stroke="#2563eb" stroke-width="2" />
            </svg>
            <span class="text-text-secondary">Venues (papers)</span>
          </div>
          <div class="flex items-center gap-2">
            <svg width="14" height="14" viewBox="0 0 14 14" aria-hidden="true">
              <circle cx="7" cy="7" r="6" fill="rgba(16, 185, 129, 0.6)" stroke="#059669" stroke-width="2" />
            </svg>
            <span class="text-text-secondary">Affiliations (authors)</span>
          </div>
        </div>
        <div id="maplibre" class="w-full rounded-lg border border-gray-200" style="height: 24rem; min-height: 24rem; background: #f8fafc;">
          <div id="maplibre-status" class="w-full h-full flex items-center justify-center text-text-secondary text-sm">Loading map…</div>
        </div>
        <div class="mt-6 grid md:grid-cols-2 gap-6">
          <div>
            <h3 class="text-base font-semibold text-primary mb-3">Papers by Venue</h3>
            <div class="divide-y divide-gray-200 border border-gray-200 rounded-lg overflow-hidden bg-white">
              {venueDisplay.map(([name, count]) => (
                <div class="flex items-center justify-between px-4 py-2 text-sm">
                  <span class="truncate pr-2">{name}</span>
                  <span class="font-mono text-primary font-semibold">{count}</span>
                </div>
              ))}
            </div>
          </div>
          <div>
            <h3 class="text-base font-semibold text-primary mb-3">Top Affiliations</h3>
            <div class="divide-y divide-gray-200 border border-gray-200 rounded-lg overflow-hidden bg-white">
              {displayAffNames.map((a, idx) => (
                <div class="flex items-center justify-between px-4 py-2 text-sm">
                  <span class="truncate pr-2">{a}</span>
                  <span class="font-mono text-emerald-700 font-semibold">{displayAffCounts[idx]}</span>
                </div>
              ))}
            </div>
            {affNames.length > displayAffNames.length && (
              <div class="text-xs text-text-secondary mt-2">Showing top {displayAffNames.length} of {affNames.length} affiliations</div>
            )}
          </div>
        </div>
      </div>
    </div>
  </section>

  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script src="https://unpkg.com/maplibre-gl@3.6.2/dist/maplibre-gl.js" defer></script>
  <link href="https://unpkg.com/maplibre-gl@3.6.2/dist/maplibre-gl.css" rel="stylesheet" />
  <script define:vars={{ years, counts, firstTimeCounts, venueNames, venueCountValues, knownVenueCoords, affNames, affCounts, knownAffiliationCoords, venueFeatures, affiliationFeatures }}>
    const initAnalytics = () => {
      const canvas = document.getElementById('papersChart');
      if (!canvas) return;
      const ctx = canvas.getContext('2d');
      if (!ctx) return;

      // years and counts are injected from the server via define:vars
      // @ts-ignore - provided at runtime
      const labels = years;
      // @ts-ignore - provided at runtime
      const dataCounts = counts;

      // eslint-disable-next-line no-undef
      new Chart(ctx, {
      type: 'bar',
      data: {
          labels,
        datasets: [{
          label: 'Number of Papers',
            data: dataCounts,
            backgroundColor: 'rgba(59, 130, 246, 0.6)',
          borderColor: 'rgba(59, 130, 246, 1)',
            borderWidth: 2,
            borderRadius: 4,
          }],
      },
      options: {
        responsive: true,
          maintainAspectRatio: false,
        plugins: {
          legend: { display: false },
            title: { display: false },
          },
          scales: {
            y: { beginAtZero: true },
          },
        },
      });

      // First-time Authors chart
      const ftCanvas = document.getElementById('firstTimeAuthorsChart');
      if (ftCanvas) {
        const ftCtx = ftCanvas.getContext('2d');
        if (ftCtx) {
          // @ts-ignore - provided at runtime
          const ftData = firstTimeCounts;
          // eslint-disable-next-line no-undef
          new Chart(ftCtx, {
      type: 'bar',
      data: {
              labels,
        datasets: [{
                label: 'First-time Authors',
                data: ftData,
                backgroundColor: 'rgba(16, 185, 129, 0.6)',
                borderColor: 'rgba(16, 185, 129, 1)',
                borderWidth: 2,
                borderRadius: 4,
              }],
      },
      options: {
        responsive: true,
              maintainAspectRatio: false,
        plugins: {
          legend: { display: false },
                title: { display: false },
              },
              scales: {
                y: { beginAtZero: true },
              },
            },
          });
        }
      }

      // MapLibre GL init with OpenMapTiles (raster tiles from OSM as default)
      const mapContainer = document.getElementById('maplibre');
      const ready = () => typeof maplibregl !== 'undefined' && mapContainer;
      const statusEl = document.getElementById('maplibre-status');
      const tryInit = () => {
        if (!ready()) {
          if (statusEl) statusEl.textContent = 'Waiting for map library…';
          setTimeout(tryInit, 100);
          return;
        }
        if (statusEl) statusEl.textContent = 'Initializing…';
        
        // eslint-disable-next-line no-undef
        const map = new maplibregl.Map({
          container: 'maplibre',
          style: {
            version: 8,
            sources: {
              osm: {
                type: 'raster',
                tiles: [
                  'https://a.tile.openstreetmap.org/{z}/{x}/{y}.png',
                  'https://b.tile.openstreetmap.org/{z}/{x}/{y}.png',
                  'https://c.tile.openstreetmap.org/{z}/{x}/{y}.png'
                ],
                tileSize: 256,
                attribution: '© OpenStreetMap contributors'
              }
            },
            layers: [
              { id: 'osm', type: 'raster', source: 'osm' }
            ]
          },
          center: [0, 20],
          zoom: 1.7,
        });

        map.on('load', () => {
          if (statusEl) statusEl.remove();
          // @ts-ignore injected via define:vars
          const venuesGeoJSON = { type: 'FeatureCollection', features: venueFeatures };
          // @ts-ignore injected via define:vars
          const affGeoJSON = { type: 'FeatureCollection', features: affiliationFeatures };

          map.addSource('venues', { type: 'geojson', data: venuesGeoJSON });
          map.addSource('affiliations', { type: 'geojson', data: affGeoJSON });

          // Venues layer (blue circles, radius scaled by count)
          map.addLayer({
            id: 'venues-circles',
            type: 'circle',
            source: 'venues',
            paint: {
              'circle-radius': [
                'interpolate', ['linear'], ['get', 'count'],
                1, 4,
                10, 12,
                30, 18
              ],
              'circle-color': 'rgba(59, 130, 246, 0.75)',
              'circle-stroke-color': '#2563eb',
              'circle-stroke-width': 1.5
            }
          });

          // Affiliations layer (green circles)
          map.addLayer({
            id: 'aff-circles',
            type: 'circle',
            source: 'affiliations',
            paint: {
              'circle-radius': [
                'interpolate', ['linear'], ['get', 'count'],
                1, 3,
                5, 7,
                20, 14
              ],
              'circle-color': 'rgba(16, 185, 129, 0.6)',
              'circle-stroke-color': '#059669',
              'circle-stroke-width': 1
            }
          });

          // Tooltips
          const popup = new maplibregl.Popup({ closeButton: false, closeOnClick: false });
          function bindHover(layerId) {
            map.on('mousemove', layerId, (e) => {
              const f = e.features && e.features[0];
              if (!f) return;
              const { name, count } = f.properties;
              popup.setLngLat(e.lngLat)
                .setHTML(`<div class="text-sm"><b>${name}</b><br/>Count: ${count}</div>`) 
                .addTo(map);
            });
            map.on('mouseleave', layerId, () => popup.remove());
          }
          bindHover('venues-circles');
          bindHover('aff-circles');
        });

        map.on('error', (e) => {
          if (statusEl) statusEl.textContent = 'Map error. See console.';
          // eslint-disable-next-line no-console
          console.error('MapLibre error:', e && e.error || e);
        });
      };
      tryInit();
    };

    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', initAnalytics);
    } else {
      initAnalytics();
    }
  </script>

  <style>
    .card {
      padding: 2rem !important;
      border-radius: 0.75rem !important;
      border: 1px solid #e5e7eb !important;
      background: white !important;
      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06) !important;
      transition: all 0.3s ease-out !important;
    }
    .card:hover {
      transform: translateY(-2px) !important;
      box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05) !important;
    }
  </style>
  <!-- Footer -->
  <footer class="bg-primary text-white py-12">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="grid md:grid-cols-4 gap-8">
        <!-- Brand Column -->
        <div class="md:col-span-2">
          <div class="flex items-center space-x-3 mb-4">
            <img src="/logo.png" alt="SOLE Archive" class="w-8 h-8 object-contain" loading="eager" style="filter: invert(1);" />
            
            <div>
              <h3 class="text-xl font-crimson font-semibold">SOLE Archive</h3>
              <p class="text-sm text-primary-200 font-mono">ConSOLE Proceedings</p>
            </div>
          </div>
          <p class="text-primary-100 mb-4 max-w-md">
            Archive of the ConSOLE proceedings, from 2000 to 2025.
          </p>
          <div class="flex space-x-4">
            
            <a href="https://www.linkedin.com/company/student-organization-of-linguistics-in-europe/posts/?feedView=all" target="_blank" 
            rel="noopener noreferrer"  class="text-primary-200 hover:text-white transition-smooth">
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
              </svg>
            </a>
          </div>
        </div>

        <!-- Quick Links -->
        <div>
          <h4 class="font-crimson font-semibold mb-4">Quick Links</h4>
          <ul class="space-y-2 text-primary-100">
            <li><a href="/" class="hover:text-white transition-smooth">Home</a></li>
            <li><a href="/papers" class="hover:text-white transition-smooth">Browse Papers</a></li>
            <li><a href="/analytics" class="hover:text-white transition-smooth">Analytics</a></li>
            <li><a href="/board" class="hover:text-white transition-smooth">Editorial Board</a></li>
          </ul>
        </div>

        <!-- Resources -->
        <div>
          <h4 class="font-crimson font-semibold mb-4">Resources</h4>
          <ul class="space-y-2 text-primary-100">
            <li><a href="https://www.universiteitleiden.nl/en/events/series/sole" target="_blank" 
              rel="noopener noreferrer" class="hover:text-white transition-smooth">About SOLE</a></li>
            
            <li><a href="mailto:sole.leiden@gmail.com" class="hover:text-white transition-smooth">Contact</a></li>
          </ul>
        </div>
      </div>

      <div class="border-t border-primary-700 mt-8 pt-8 flex flex-col md:flex-row justify-between items-center">
        <p class="text-primary-200 text-sm">© 2025 SOLE Archive. Website built by <a href="https://tomsgrizzi.github.io/" class="hover:text-white transition-smooth">Tommaso Sgrizzi</a>.</p>
        <div class="flex space-x-6 mt-4 md:mt-0">
          
        </div>
      </div>
    </div>
  </footer>
</Layout>